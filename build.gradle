plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.mod_name
version = project.minecraft_version + "-fabric-" + project.mod_version
group = project.mod_base_package

repositories {
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven { url "https://maven.parchmentmc.org" }
    maven { url "https://maven.shedaniel.me/" }
	maven { url = "https://maven.blamejared.com/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("curse.maven:jei-238222:4644452")
    modImplementation("curse.maven:jade-324717:4653227")
    modImplementation("curse.maven:kiwi-549404:4571945")
    annotationProcessor "curse.maven:kiwi-549404:4571945"
}

loom {
    //accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
    mixin {
        defaultRefmapName = "${project.mod_id}.refmap.json"
    }
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	// withSourcesJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
            // artifact(sourcesJar) {
            //     builtBy remapSourcesJar
            // }
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

unifiedPublishing {
    project {
        displayName = project.version
        version = project.mod_version // Optional, Inferred from project by default
        changelog = file("CHANGELOG.md").text // Optional, in markdown format
        releaseType = "release" // Optional, use "release", "beta" or "alpha"
        gameVersions = ["1.20", "1.20.1"]
        gameLoaders = ["fabric"]

        mainPublication tasks.remapJar // Declares the publicated jar

        curseforge {
            token = System.getenv("CURSE_TOKEN")
            id = "889948" // Required, must be a string, ID of CurseForge project

            relations { // Optional, Inferred from the relations above by default
                depends "kiwi"
                optional "jei"
            }
        }

        modrinth {
            token = System.getenv("MODRINTH_TOKEN")
            id = "99ZMIXIw" // Required, must be a string, ID of Modrinth project
            displayName = project.mod_version

            relations { // Optional, Inferred from the relations above by default
                depends "kiwi"
                optional "jei"
            }
        }
    }
}

